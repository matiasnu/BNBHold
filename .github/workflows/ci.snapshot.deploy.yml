name: Entorno CI 'snapshot' vesions

on:
  push:
    # publish image as master=snapshot or on new tag
    # except on document and ci changes
    branches:
      - master
    tags:
      - '*'
#    paths-ignore:
#      - '**.md'
#      - '.github/workflows/*yml'

env:
  # TODO: remember to update version on new tag
  # Si se quiere generar una release
  # LATEST_TAG default snapshot
  LATEST_TAG: v1.0.4
  DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  # DOCKER_HUB_PASS: ${{ secrets.DOCKER_HUB_PASS }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:



  test:
    
    runs-on: [self-hosted, node]
    
    if: github.event_name != 'schedule'
    steps:
      - name: Checkout repo code for testing
        uses: actions/checkout@v2

      - name: Logging into dockerhub
        run: echo $DOCKER_HUB_TOKEN | docker login -u $DOCKER_HUB_USER --password-stdin        

      - name: Buildeamos todos las imagenes requeridas
        run: |
          echo 'build'
          # docker-compose --file docker-compose-test.yml build

      - name: Levantamos el entorno de test
        run: |
          echo 'tests'
          # docker-compose --file docker-compose-test.yml up --remove-orphans --exit-code-from tests

      - name: Bajamos el entorno de test
        run: |
          echo 'down'
          # docker-compose --file docker-compose-test.yml down



  # deploy:

  #   runs-on: [self-hosted, node]

  #   if: github.event_name != 'schedule'
  #   steps:

  #     - name: Checkout repo code
  #       uses: actions/checkout@v2

  #     - name: clean cache
  #       run: npm cache clean --force

  #     - name: install packages
  #       run: yarn install

  #     - name: Build web
  #       run: CI='' npm run build --prod --verbose
        
  #     - name: Deploy to gh-pages
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./build        
        
